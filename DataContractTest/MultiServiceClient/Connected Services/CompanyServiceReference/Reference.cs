//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MultiServiceClient.CompanyServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/MultiServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompanyServiceReference.ICompanyGetDate")]
    public interface ICompanyGetDate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyGetDate/GetDate", ReplyAction="http://tempuri.org/ICompanyGetDate/GetDateResponse")]
        string GetDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyGetDate/GetDate", ReplyAction="http://tempuri.org/ICompanyGetDate/GetDateResponse")]
        System.Threading.Tasks.Task<string> GetDateAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompanyGetDateChannel : MultiServiceClient.CompanyServiceReference.ICompanyGetDate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompanyGetDateClient : System.ServiceModel.ClientBase<MultiServiceClient.CompanyServiceReference.ICompanyGetDate>, MultiServiceClient.CompanyServiceReference.ICompanyGetDate {
        
        public CompanyGetDateClient() {
        }
        
        public CompanyGetDateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompanyGetDateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyGetDateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyGetDateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDate() {
            return base.Channel.GetDate();
        }
        
        public System.Threading.Tasks.Task<string> GetDateAsync() {
            return base.Channel.GetDateAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompanyServiceReference.ICompanyGetPerson")]
    public interface ICompanyGetPerson {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyGetPerson/GetPerson", ReplyAction="http://tempuri.org/ICompanyGetPerson/GetPersonResponse")]
        MultiServiceClient.CompanyServiceReference.Person GetPerson(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompanyGetPerson/GetPerson", ReplyAction="http://tempuri.org/ICompanyGetPerson/GetPersonResponse")]
        System.Threading.Tasks.Task<MultiServiceClient.CompanyServiceReference.Person> GetPersonAsync(string firstName, string lastName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompanyGetPersonChannel : MultiServiceClient.CompanyServiceReference.ICompanyGetPerson, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompanyGetPersonClient : System.ServiceModel.ClientBase<MultiServiceClient.CompanyServiceReference.ICompanyGetPerson>, MultiServiceClient.CompanyServiceReference.ICompanyGetPerson {
        
        public CompanyGetPersonClient() {
        }
        
        public CompanyGetPersonClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompanyGetPersonClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyGetPersonClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompanyGetPersonClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MultiServiceClient.CompanyServiceReference.Person GetPerson(string firstName, string lastName) {
            return base.Channel.GetPerson(firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<MultiServiceClient.CompanyServiceReference.Person> GetPersonAsync(string firstName, string lastName) {
            return base.Channel.GetPersonAsync(firstName, lastName);
        }
    }
}
